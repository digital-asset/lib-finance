-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
module Test.Finance.Market.Instrument where

import DA.Next.Map as Map
import DA.Next.Set as Set

import DA.Finance.Instrument.Equity.Stock
import DA.Finance.Instrument.Equity.Stock.Lifecycle

import Test.Finance.Utils

data InstrumentMarket = InstrumentMarket
  with
    stockMap : Map Text (ContractId EquityStock)

-- | The stock info used to set up the market.
data StockInfo = StockInfo
  with
    stockLabel : Text
    ccyLabel : Text

instrumentSetup : Test m => Party -> Set Party -> [StockInfo] -> m InstrumentMarket
instrumentSetup provider observers stockInfo = do
  -- Process a single stock
  let processStock StockInfo{..} = do
        let ccy = initAssetId provider ccyLabel 0
        let id = initAssetId provider stockLabel 0
        (,) stockLabel <$> submitCreate provider EquityStock with observers = Set.empty, ..

  let signatories = Set.singleton provider
  submitCreate provider EquityStockCashDividendLifecycleRule with signatories
  submitCreate provider EquityStockSplitLifecycleRule with signatories
  stockMap <- Map.fromList <$> mapA processStock stockInfo

  return InstrumentMarket with ..
